name: CI

on:
  pull_request:
    branches: [ main, release/* ]
  push:
    branches: [ main, release/* ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          check-latest: true
          distribution: temurin
          java-version: ${{ matrix.java }}
      - name: Set up cache
        uses: actions/cache@v3
        env:
          cache-name: cache-maven-artifacts
        with:
          key: cudami-cache-java-${{ matrix.java }}-${{ github.run_id }}
          path: |
            ~/.m2/repository
            **/target
      - name: Check Java codestyle
        run: mvn com.spotify.fmt:fmt-maven-plugin:check
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          check-latest: true
          node-version: 12
      - name: Check Javascript codestyle
        run: npm install && npm run format-check
        working-directory: client
      - name: Build with Maven
        run: mvn -B -U clean verify -Pproduction
    strategy:
      matrix:
        java: [17]
  coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up cache
        uses: actions/cache@v3
        env:
          cache-name: cache-maven-artifacts
        with:
          key: cudami-cache-java-17-${{ github.run_id }}
          path: |
            ~/.m2/repository
            **/target
      - name: Publish code coverage reports
        uses: codecov/codecov-action@v3
  publish:
    if: (github.event_name == 'push' && (contains(github.ref, 'main') || startsWith(github.ref, 'release/'))) || github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up cache
        uses: actions/cache@v3
        env:
          cache-name: cache-maven-artifacts
        with:
          key: cudami-cache-java-17-${{ github.run_id }}
          path: |
            ~/.m2/repository
            **/target
      - name: Install XML utils
        run: sudo apt update && sudo apt install libxml2-utils
      - name: Extract project version
        run: echo "PROJECT_VERSION=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml)" >> $GITHUB_ENV
      # Publish snapshot
      - name: Set up JDK 17 for publishing a snapshot
        if: github.event_name == 'push' && endswith(env.PROJECT_VERSION, 'SNAPSHOT')
        uses: actions/setup-java@v3
        with:
          check-latest: true
          distribution: temurin
          java-version: 17
          server-id: ossrh-snapshots
          server-password: MAVEN_PASSWORD
          server-username: MAVEN_USERNAME
      - name: Publish snapshot to the Maven Central Repository
        if: github.event_name == 'push' && endswith(env.PROJECT_VERSION, 'SNAPSHOT')
        run: mvn -B deploy -DskipTests -Pmaven-central
        env:
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      # Publish release
      - name: Set up JDK 17 for publishing a release
        if: github.event_name == 'release' && !endswith(env.PROJECT_VERSION, 'SNAPSHOT')
        uses: actions/setup-java@v3
        with:
          check-latest: true
          distribution: temurin
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          java-version: 17
          server-id: ossrh
          server-password: MAVEN_PASSWORD
          server-username: MAVEN_USERNAME
      - name: Publish release to the Maven Central Repository
        if: github.event_name == 'release' && !endswith(env.PROJECT_VERSION, 'SNAPSHOT')
        run: mvn -B deploy -DskipTests -Pmaven-central,sign
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
